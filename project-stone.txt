<template>
  <v-dialog transition="dialog-top-transition" max-width="600">
    <template v-slot:activator="{ on, attrs }">
      <v-btn icon v-bind="attrs" v-on="on" class="mx-auto">
        <v-icon>mdi-plus</v-icon>
      </v-btn>
    </template>

    <template>
      <v-card>
        <v-card-title class="text-h5 lighten-2"> 添加商品 </v-card-title>
        <v-form v-model="valid" ref="form" lazy-validation>
          <v-container>
            <v-text-field v-model="name" label="展示物名称"></v-text-field>

            <v-text-field
              v-model="img_url"
              label="展示物图片链接"
            ></v-text-field>

            <v-text-field v-model="info" label="展示物信息"></v-text-field>

            <v-text-field v-model="link" label="展示物链接"></v-text-field>
          </v-container>
          <v-divider></v-divider>
          <v-card-actions>
              <v-spacer></v-spacer>
            <v-btn color="primary" text @click="submit(name, img_url, info, link)"
              >上传</v-btn
            >
          </v-card-actions>
        </v-form>
      </v-card>
    </template>
  </v-dialog>
</template>

<script>
import axios from "axios";
export default {
  name: "addstone",
  data() {
    return {
      name: "",
      img_url: "",
      info: "",
      link: "",
    };
  },
  methods: {
    submit(name, img_url, info, link) {
      console.log("submit running");
      if ((name, img_url, info, link)) {
        axios.defaults.baseURL = "http://127.0.0.1:8081";
        this.$axios
          .post("/admin/stone/addstone", {
            name: name,
            img_url: img_url,
            info: info,
            link: link,
          })
          .then(() => {
            this.$swal("Great!", "Stone added successfully!", "success");
            this.$router.push({ name: "Admin" });
            this.$refs.form.reset();
          })
          .catch(() => {
            this.$swal("Oh oo!", "Could not add the stone!", "error");
          });
      } else {
        this.$swal("错误!", "信息不能为空!", "error");
      }
    },
  },
};
</script><template> 
  <v-footer padless>
    <v-col class="text-center" cols="12">
      {{ new Date().getFullYear() }} — <strong>doob.cn</strong> using
      <a href="https://vuejs.org">Vue.js</a> and <a href="https://vuetifyjs.com/">Vuetify</a>
    </v-col>
  </v-footer>
</template><template>
  <v-container>
    <v-row>
      <v-col v-for="stone in stones" :key="stone._id" cols="12" sm="4">
        <v-card :loading="loading" class="" max-width="374">
          <template slot="progress">
            <v-progress-linear
              color="deep-purple"
              height="10"
              indeterminate
            ></v-progress-linear>
          </template>

          <v-img :src="stone.img_url" height="250"></v-img>

          <v-card-title> {{ stone.name }} </v-card-title>

          <v-card-text>
            <div>
              {{ stone.info }}
            </div>
          </v-card-text>

          <v-divider class="mx-4"></v-divider>

          <v-card-title>Buy now？</v-card-title>

          <v-card-actions>
            <v-btn color="deep-purple lighten-2" text @click="reserve">
             购买
            </v-btn>
          </v-card-actions>
        </v-card>
      </v-col>
    </v-row>
  </v-container>
</template>

<script>
import axios from "axios";
export default {
  name: "Stones",
  data() {
    return {
      stones: [],
    };
  },
  mounted() {
    this.fetchStones();
  },

  methods: {
    async fetchStones() {
      return axios({
        method: "get",
        url: "http://localhost:8081/api/stones",
      })
        .then((response) => {
          this.stones = response.data.stones;
        })
        .catch(() => {});
    },
  },
};
</script><template>
  <div>
    <v-app-bar color="blue accent-4" dense dark>
      <v-toolbar-title>doob.cn</v-toolbar-title>

      <v-spacer></v-spacer>

      <v-btn icon to="/" value="favorites">
        <v-icon>mdi-home</v-icon> 
      </v-btn>

      <v-btn icon to="/About">
        <v-icon>mdi-dialpad</v-icon> 
      </v-btn>

    </v-app-bar>
  </div>
</template><template>
  <div>
    <v-flex v-for="stone in stones" :key="stone._id">
      <v-card class="mx-auto my-2" outlined>
        <v-card-text>
          <v-row justify="space-around">
            <v-avatar>
              <v-img
                :src="stone.img_url"
                style="border-radius: 50%; height: 2.5rem; width: 2.5rem"
              ></v-img>
            </v-avatar>

            <strong class="mx-4 info--text text--darken-2">
              {{ stone.name }}
            </strong>
            {{ stone._id }}
            <v-spacer></v-spacer>

            <div class="text-right">
              <v-btn class="mx-1" icon depressed @click="DeleteFunc()">
                <v-icon> mdi-delete </v-icon>
              </v-btn>
              <v-dialog transition="dialog-top-transition" max-width="600">
                <template v-slot:activator="{ on, attrs }">
                  <v-btn icon v-bind="attrs" v-on="on" class="mx-auto">
                    <v-icon>mdi-pencil</v-icon>
                  </v-btn>
                </template>

                <template>
                  <v-card>
                    <v-card-title class="text-h5 lighten-2">
                      修改商品信息
                    </v-card-title>
                    <v-form v-model="valid" ref="form" lazy-validation>
                      <v-container>
                        <v-text-field
                          v-model="name"
                          label="展示物名称"
                        ></v-text-field>

                        <v-text-field
                          v-model="img_url"
                          label="展示物图片链接"
                        ></v-text-field>

                        <v-text-field
                          v-model="info"
                          label="展示物信息"
                        ></v-text-field>

                        <v-text-field
                          v-model="link"
                          label="展示物链接"
                        ></v-text-field>
                      </v-container>
                      <v-divider></v-divider>
                      <v-card-actions>
                        <v-spacer></v-spacer>
                        <v-btn
                          color="primary"
                          text
                          @click="UpdateFunc()"
                          >确定</v-btn
                        >
                      </v-card-actions>
                    </v-form>
                  </v-card>
                </template>
              </v-dialog>
            </div>
          </v-row>
        </v-card-text>
      </v-card>
    </v-flex>
  </div>
</template>

<script>
import axios from "axios";
export default {
  name: "Stones",
  data() {
    return {
      stones: [],
    };
  },
  mounted() {
    this.fetchStones();
  },

  methods: {

    async fetchStones() {
      return axios({
        method: "get",
        url: "http://localhost:8081/api/stones",
      })
        .then((response) => {
          this.stones = response.data.stones;
        })
        .catch(() => {});
    },

    DeleteFunc() {
      console.log("deletefunc running");
      console.log(this.stone._id);
      axios.defaults.baseURL = "http://127.0.0.1:8081";
      this.$axios.post("/admin/stone/delete", {
        _id: this.stone._id,
      });
    },

    UpdateFunc(){
      //
    }

  },
};
</script>
<template>
  <div class="stone">
    <v-flex v-for="stone in stones" :key="stone._id">
      <div>
        <v-dialog transition="dialog-top-transition" max-width="600">
          <template v-slot:activator="{ on, attrs }">
            <button v-bind="attrs" v-on="on" class="text-right">
              <v-img
                :src="stone.img_url"
                class="stone-anime text-right"
                style="border-radius: 50%; height: 5rem; width: 5rem"
              ></v-img>
            </button>
          </template>

          <template>
            <v-card>
              <v-card-title class="text-h5 lighten-2"> 商品信息 </v-card-title>
              <v-card-text>
                <v-row>
                  <v-col>
                    <v-img
                      :src="stone.img_url"
                      style="height: 10rem; width: 7rem"
                      class="text-left"
                      alt=""
                    ></v-img>
                  </v-col>

                  <v-col>
                    <div class="text-h4">{{ stone.name }}</div>
                    {{ stone.info }}
                  </v-col>
                </v-row>
              </v-card-text>

              <v-divider></v-divider>
            </v-card>
          </template>
        </v-dialog>
      </div>
    </v-flex>
  </div>
</template>

<script>
import axios from "axios";
export default {
  data: () => ({
    stones: [],
  }),
  mounted() {
    this.fetchStones();
  },
  methods: {
    async fetchStones() {
      return axios({
        method: "get",
        url: "http://localhost:8081/api/stones",
      })
        .then((response) => {
          this.stones = response.data.stones;
        })
        .catch(() => {});
    },
  },
};
</script>

<style scoped>
.stone-anime {
  animation: lb 15s linear infinite;
}

.stone-anime:hover {
  animation-play-state: paused;
}

@keyframes lb {
  form {
    transform: translateX(0);
  }

  to {
    transform: translateX(1000px);
  }
}
</style>import Vue from 'vue'
import VueRouter from 'vue-router'
//import { component } from 'vue/types/umd'
import Home from '../views/Home.vue'
Vue.use(VueRouter)

const routes = [
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    // route level code-splitting
    // this generates a separate chunk (about.[hash].js) for this route
    // which is lazy-loaded when the route is visited.
    component: () => import(/* webpackChunkName: "about" */ '../views/About.vue')
  },
  {
    path: '/admin',
    name: 'Admin',
    // route level code-splitting
    // this generates a separate chunk (about.[hash].js) for this route
    // which is lazy-loaded when the route is visited.
    component: () => import(/* webpackChunkName: "about" */ '../views/admin/Admin.vue')
  },
  {
    path: '/login',
    name: 'Login',
    // route level code-splitting
    // this generates a separate chunk (about.[hash].js) for this route
    // which is lazy-loaded when the route is visited.
    component: () => import(/* webpackChunkName: "about" */ '../views/Login.vue')
  },
]

const router = new VueRouter({
  routes
})

export default router<template>
  <v-container>
    <h1>管理页面</h1>

    <StoneSettingList />

    <div class="text-center">
      <Addstone />
    </div>
  </v-container>
</template>

<script>
import Addstone from "../../components/Addstone.vue";
import StoneSettingList from "../../components/Stone_Setting_list.vue";
export default {
  name: "Stones",
  components: {
    Addstone,
    StoneSettingList,
  },
};
</script><template>
  <v-container>
    <Goods/>
  </v-container>
</template>

<script>
  import Goods from '../components/Goods.vue'

  export default {
    name: 'About',
    components: {
      Goods,
    },
  }
</script>
<template>
  <div>
    <Stone />
    
  </div>
</template>

<script>
import Stone from "../components/Stone.vue";
export default {
  name: "Home",

  components: {
    Stone,
  },
};
</script><template>
  <div>
    <v-container>
      <v-card>
        <v-card-title> 系统登录 </v-card-title>
        <v-card-text>
          <div>
            <v-row>
              <!--登录框居中-->
              <v-col>
                <div id="input">
                  <v-row :gutter="10">
                    <v-col>
                      <v-text-field
                        placeholder="请输入用户名"
                        v-model="username"
                        :maxlength="20"
                        clearable
                        prefix-icon="el-icon-s-custom"
                      ></v-text-field>
                    </v-col>
                  </v-row>
                  <br />
                  <v-row :gutter="10">
                    <v-col>
                      <v-text-field
                        placeholder="请输入密码"
                        v-model="password"
                        show-password
                        prefix-icon="el-icon-lock"
                      ></v-text-field>
                    </v-col>
                  </v-row>
                </div>
              </v-col>
            </v-row>
          </div>
        </v-card-text>
        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn type="primary" @click="LoginFunc(username, password)"
            >登录</v-btn
          >
        </v-card-actions>
      </v-card>
    </v-container>
  </div>
</template>

<script>
import axios from "axios";
export default {
  name: "login",
  data() {
    return {
      username: "",
      password: "",
    };
  },
  methods: {
    LoginFunc(username, password) {
      console.log("loginfunc running");
      if ((username, password)) {
        // 全局修改axios默认配置
        axios.defaults.baseURL = "http://127.0.0.1:8081";
        this.$axios
          .post("/admin/login/doLogin", {
            username: username,
            password: password,
          })
          .then(() => {
            this.$swal("Great!", "登录成功!", "success");
            this.$router.push({ name: "Admin" });
          })
          .catch((error) => {
            const message = error.response.data.message;
            this.$swal("Oh oo!", `${message}`, "error");
          });
      } else {
        this.$swal("错误!", "用户名或密码不能为空！", "error");
      }
    },
  },
};
</script>

<style scoped>
</style><template>
  <v-app>
    <v-container>
      <Navbar />
    </v-container>
    <v-main>
      <v-container fluid>
        <router-view></router-view>
      </v-container>
    </v-main>
    <Footer />
  </v-app>
</template>

<script>
import Navbar from "./components/Navbar.vue";
import Footer from "./components/Footer.vue";
export default {
  components: {
    Navbar,
    Footer,
  },
  name: "App",
  plugins: {},
  data: () => ({
    //
  }),
};
</script>import Vue from 'vue'
import App from './App.vue'
import router from './router'
import vuetify from './plugins/vuetify'
import VueSwal from 'vue-swal'
import animated from 'animate.css'
import axios from '../node_modules/axios'
Vue.config.productionTip = false
Vue.use(animated);
Vue.use(VueSwal);
Vue.prototype.$axios = axios;
new Vue({
  router,
  vuetify,
  render: h => h(App)
}).$mount('#app')








